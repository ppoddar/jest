<!-- ======================================================= -->
<!-- Adds JEST to an application.                            -->
<!--                                                         -->
<!-- adding JEST amounts to adding jest.jar and json.jar to  -->
<!-- classpath of a JPA application. It is assumed that JPA  -->
<!-- application package refers to javax-peristece-api.jar   -->
<!-- and META-INF/persistence.xml resource.                  --> 
<!-- ======================================================= -->
<project name="jest" default="jestify">

	<property name="src.dir" value="src/main/java" />
	<property name="resources.dir" value="src/main/resources" />
	<property name="classes.dir" value="target/classes" />
	<property name="jest.jar" value="jest.jar" />
	<property name="lib.dir" value="lib" />



	<property file="build.properties">
	</property>

<!--

	<target name="fetch-dependencies">
		<mkdir dir="${lib.dir}" />
		<get dest="${lib.dir}/javaee.jar" src="http://central.maven.org/maven2/javax/javaee-api/7.0/javaee-api-7.0.jar" usetimestamp="true" />
		<get dest="${lib.dir}/tomcat-core.jar" src="http://central.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-core/8.0.1/tomcat-embed-core-8.0.1.jar" usetimestamp="true" />
		<get dest="${lib.dir}/tomcat-logging.jar" src="http://central.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-logging-juli/8.0.1/tomcat-embed-logging-juli-8.0.1.jar" usetimestamp="true" />
		<get dest="${lib.dir}/tomcat-jasper.jar" src="http://central.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-jasper/8.0.1/tomcat-embed-jasper-8.0.1.jar" usetimestamp="true" />
		<get dest="${lib.dir}/tomcat-jsp-api.jar" src="http://central.maven.org/maven2/org/apache/tomcat/tomcat-jsp-api/8.0.1/tomcat-jsp-api-8.0.1.jar" usetimestamp="true" />
		<get dest="${lib.dir}/json.jar" src="https://repo1.maven.org/maven2/org/json/json/20160810/json-20160810.jar" usetimestamp="true" />
	</target>
-->
	<!-- checks command line arguments are defined           -->
	<!-- and fail on missing property                        -->

	<target name="-app-jar">
		<condition property="app.jar.is.set">
			<isset property="app.jar" />
		</condition>
		<fail unless="app.jar.is.set" message="${line.separator}
***ERROR: Application archive is not specified. ${line.separator}
   Use -Dapp.jar=x ${line.separator}
where x is an application jar file" />

		<condition property="app.jar.exists">
			<available file="${app.jar}" property="file">
			</available>
		</condition>
		<fail unless="app.jar.exists" message=
			"***ERROR: Application archive ${app.jar} does not exist" />
	</target>
	
	
	<target name="-app-lib">
		<condition property="app.lib.is.set">
			<isset property="app.lib" />
		</condition>
		
		
		<fail unless="app.lib.is.set" message="${line.separator}
***ERROR: Application library is not specified. ${line.separator}
   Use -Dapp.lib=x ${line.separator}
where x is a directory containing jar files.${line.separator}
		use * wildcard for all jar fiels in a library" />

	</target>



	<target name="jestify" depends="-app-jar, -app-lib" 
		description="add JEST to an application archive">
		
		
		<exec executable="mvn" failifexecutionfails="true" failonerror="true">
			<arg value="clean"/>
			<arg value="package"/>
			<arg value="appassembler:assemble"/>
		</exec>
		
		<copy file="app.env" todir="target/bin"/>
		
		<replace 
			token="app.jar" 
			value="${app.jar}" 
			file="target/bin/app.env">
		</replace>
		
		<replace 
			token="app.lib" 
			value="${app.lib}" 
			file="target/bin/app.env">
		</replace>

		
		<copy todir="target/repo">
			<fileset dir="src/main/resources">
				<include name="index.html"/>
			</fileset>
			<fileset dir="src/main/resources/pages">
				<exclude name="jest.html"/>
				<exclude name="test/**.*"/>
			</fileset>
		</copy>
		
		<exec executable="./target/bin/jest"></exec>
		

	</target>

<!--
	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="compile" depends="fetch-dependencies" description="compiles JEST servlet">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="true" includeantruntime="false">
			<classpath refid="compile.classpath">
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="clean, compile" description="creates JEST jar">
		<jar destfile="${jest.jar}">
			<fileset dir="${classes.dir}">
				<include name="**/*.class"/>
			</fileset>
		</jar>
	</target>

-->

	<target name="clean">
		<delete dir="${classes.dir}" failonerror="false">
		</delete>
	</target>


</project>